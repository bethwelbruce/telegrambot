# -*- coding: utf-8 -*-
"""Untitled131.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15u5ItCdT9Fgi6uzBEZXhCfbd6LwOJNKl
"""

!pip install telethon

from telethon import TelegramClient, events

# Your API credentials
api_id = 24945709  # Your API ID
api_hash = 'a70a3bb3c70c1092fc064bb79e7d2237'  # Your API hash

# Initialize the Telegram client
client = TelegramClient('user_session', api_id, api_hash)

# Source and destination chat details for Ethereum (ETH) and Solana (SOL)
source_chat_eth = -1002206932048  # Quartz [ETH]
destination_chat_eth = -1002360843281  # Jessie「ETH」

source_chat_sol = -1001993316422  # Quartz [SOL]
destination_chat_sol = -1002331249885  # Jessie「SOL」

async def main():
    await client.start()

    # Event handler for forwarding Ethereum-related messages
    @client.on(events.NewMessage(chats=source_chat_eth))
    async def forward_message_eth(event):
        try:
            original_message = event.message.message

            # Remove the source group mention from the message (if any)
            if "Quartz [ETH]" in original_message:
                modified_message = original_message.replace("Quartz [ETH]", "")
            else:
                modified_message = original_message

            # Modify Ethereum-related message if needed
            if "Called first @quartzvip" in modified_message:
                modified_message = modified_message.replace("Called first @quartzvip", "Called first @Jessievip")

            # Send the modified message to the Ethereum destination group
            await client.send_message(destination_chat_eth, modified_message)
            print(f"ETH: Modified message successfully forwarded: {modified_message}")
        except Exception as e:
            print(f"Error while forwarding ETH message: {e}")

    # Event handler for forwarding Solana-related messages
    @client.on(events.NewMessage(chats=source_chat_sol))
    async def forward_message_sol(event):
        try:
            original_message = event.message.message

            # Remove the source group mention from the message (if any)
            if "Quartz [SOL]" in original_message:
                modified_message = original_message.replace("Quartz [SOL]", "")
            else:
                modified_message = original_message

            # Modify Solana-related message if needed
            if "Called first @quartzvip" in modified_message:
                modified_message = modified_message.replace("Called first @quartzvip", "Called first @Jessievip")

            # Send the modified message to the Solana destination group
            await client.send_message(destination_chat_sol, modified_message)
            print(f"SOL: Modified message successfully forwarded: {modified_message}")
        except Exception as e:
            print(f"Error while forwarding SOL message: {e}")

    print("Bot is running. Press Ctrl+C to stop.")
    await client.run_until_disconnected()

# Run the main function
await main()